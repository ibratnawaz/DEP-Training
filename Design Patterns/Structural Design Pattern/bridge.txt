import java.util.ArrayList;  
import java.util.List;

public class BridgePatternDemo {  
  public static void main(String[] args) {  
    QuestionManager questions = new QuestionManager("Java Programming Language");  
    questions.q = new JavaQuestions();  
    // display all questions
    questions.displayAll();
    
    // delete a question
    questions.delete("What is class?");  
    questions.displayAll();
    
    // adding new question
    questions.newOne("What is inheritance? ");  
    questions.newOne("How many types of inheritance are there in java?");  
    questions.displayAll();  
  }  
}

public class QuestionManager  {  
  protected Question q;  
  public String catalog;  
  
  public QuestionManager(String catalog) {  
    this.catalog=catalog;  
  }  
  
  public void newOne(String quest) {  
    q.newQuestion(quest);  
  } 
  
  public void delete(String quest) {  
    q.deleteQuestion(quest);  
  }
  
  public void displayAll() {  
    System.out.println("Question Paper: " + catalog+ "\n");
    q.displayAllQuestions();  
    System.out.println("\n---------------------------------------------------------");  
  }  
}

public interface Question {  
  public void newQuestion(String q);  
  public void deleteQuestion(String q);
  public void displayAllQuestions();  
} 

public class JavaQuestions implements Question {  
  private List <String> questions = new ArrayList<String>();  
  
  public JavaQuestions(){  
    questions.add("What is class?");  
    questions.add("What is interface?");  
    questions.add("What is abstraction?");  
    questions.add("How multiple polymorphism is achieved in java?");  
    questions.add("How many types of exception  handling are there in java?");  
    questions.add("Define the keyword final for  variable, method, and class in java?");  
    questions.add("What is abstract class?");  
    questions.add("What is multi-threading?");  
  }
  
  public void newQuestion(String quest) {  
    questions.add(quest);  
  }  
  
  public void deleteQuestion(String quest) {  
    questions.remove(quest);  
  }  

  public void displayAllQuestions() {  
    for (String quest : questions) {  
      System.out.println(quest);  
    }  
  }  
}
